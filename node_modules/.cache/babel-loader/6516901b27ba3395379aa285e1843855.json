{"ast":null,"code":"var _jsxFileName = \"G:\\\\workspaces\\\\reactWorkspace\\\\olx\\\\frontend\\\\src\\\\pages\\\\AdPage\\\\index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { PageArea, Fake } from \"./styled\";\nimport { useParams } from \"react-router-dom\";\nimport useApi from \"../../helpers/OlxApi\";\nimport { PageContainer } from \"../../components/MainComponents\";\nimport { Slide } from \"react-slideshow-image\";\n\nconst App = () => {\n  function formatDate(date) {\n    let cDate = new Date(date);\n    let months = [\"janeiro\", \"fevereiro\", \"março\", \"maio\", \"abril\", \"junho\", \"julho\", \"agosto\", \"setembro\", \"outro\", \"novembro\", \"dezembro\"];\n    let cDay = cDate.getDate();\n    let cMonth = cDate.getMonth();\n    let cYear = cDate.getFullYear();\n    return `${cDay} de ${months[cMonth]} de ${cYear}`;\n  }\n\n  const api = useApi();\n  const {\n    id\n  } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [adInfo, setAdInfo] = useState({});\n  useEffect(() => {\n    const getAdInfo = async id => {\n      const json = await api.getAd(id, true);\n      console.log(json);\n      setAdInfo(json);\n      setLoading(false);\n    };\n\n    getAdInfo(id);\n  }, []);\n  return /*#__PURE__*/React.createElement(PageContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PageArea, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"leftSide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"adImage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \" \", loading && /*#__PURE__*/React.createElement(Fake, {\n    height: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 27\n    }\n  }), adInfo.images && /*#__PURE__*/React.createElement(Slide, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, adInfo.images.map((img, k) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"each-slide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }))), adInfo.title && /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 32\n    }\n  }, adInfo.title), adInfo.dateCreated && /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"Criado em \", formatDate(adInfo.dateCreated))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"adInf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"adName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, loading && /*#__PURE__*/React.createElement(Fake, {\n    height: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 51\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"adDescription\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, loading && /*#__PURE__*/React.createElement(Fake, {\n    height: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }\n  }), adInfo.description, /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }), adInfo.views && /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 34\n    }\n  }, \"Vizualia\\xE7\\xF5es: \", adInfo.views))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rightSide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"box box--pading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, \" \", loading && /*#__PURE__*/React.createElement(Fake, {\n    height: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"box box--pading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \" \", loading && /*#__PURE__*/React.createElement(Fake, {\n    height: 50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["G:/workspaces/reactWorkspace/olx/frontend/src/pages/AdPage/index.js"],"names":["React","useState","useEffect","PageArea","Fake","useParams","useApi","PageContainer","Slide","App","formatDate","date","cDate","Date","months","cDay","getDate","cMonth","getMonth","cYear","getFullYear","api","id","loading","setLoading","adInfo","setAdInfo","getAdInfo","json","getAd","console","log","images","map","img","k","title","dateCreated","description","views"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { PageArea, Fake } from \"./styled\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport useApi from \"../../helpers/OlxApi\";\r\nimport { PageContainer } from \"../../components/MainComponents\";\r\nimport { Slide } from \"react-slideshow-image\";\r\n\r\nconst App = () => {\r\n  function formatDate(date) {\r\n    let cDate = new Date(date);\r\n    let months = [\r\n      \"janeiro\",\r\n      \"fevereiro\",\r\n      \"março\",\r\n      \"maio\",\r\n      \"abril\",\r\n      \"junho\",\r\n      \"julho\",\r\n      \"agosto\",\r\n      \"setembro\",\r\n      \"outro\",\r\n      \"novembro\",\r\n      \"dezembro\",\r\n    ];\r\n    let cDay = cDate.getDate();\r\n    let cMonth = cDate.getMonth();\r\n    let cYear = cDate.getFullYear();\r\n\r\n    return `${cDay} de ${months[cMonth]} de ${cYear}`;\r\n  }\r\n  const api = useApi();\r\n  const { id } = useParams();\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [adInfo, setAdInfo] = useState({});\r\n\r\n  useEffect(() => {\r\n    const getAdInfo = async (id) => {\r\n      const json = await api.getAd(id, true);\r\n      console.log(json);\r\n      setAdInfo(json);\r\n      setLoading(false);\r\n    };\r\n    getAdInfo(id);\r\n  }, []);\r\n  return (\r\n    <PageContainer>\r\n      <PageArea>\r\n        <div className=\"leftSide\">\r\n          <div className=\"box\">\r\n            <div className=\"adImage\">\r\n              {\" \"}\r\n              {loading && <Fake height={300} />}\r\n              {adInfo.images && (\r\n                <Slide>\r\n                  {adInfo.images.map((img, k) => (\r\n                    <div className=\"each-slide\"></div>\r\n                  ))}\r\n                </Slide>\r\n              )}\r\n              {adInfo.title && <h2>{adInfo.title}</h2>}\r\n              {adInfo.dateCreated && (\r\n                <small>Criado em {formatDate(adInfo.dateCreated)}</small>\r\n              )}\r\n            </div>\r\n            <div className=\"adInf\">\r\n              <div className=\"adName\">{loading && <Fake height={20} />}</div>\r\n              <div className=\"adDescription\">\r\n                {loading && <Fake height={100} />}\r\n                {adInfo.description}\r\n                <hr />\r\n                {adInfo.views && <small>Vizualiações: {adInfo.views}</small>}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"rightSide\">\r\n          <div className=\"box box--pading\">\r\n            {\" \"}\r\n            {loading && <Fake height={20} />}\r\n          </div>\r\n          <div className=\"box box--pading\">\r\n            {\" \"}\r\n            {loading && <Fake height={50} />}\r\n          </div>\r\n        </div>\r\n      </PageArea>\r\n    </PageContainer>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}