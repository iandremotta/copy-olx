{"ast":null,"code":"import Cookies from \"js-cookie\";\nimport qs from \"qs\";\nconst BASEAPI = \"http://alunos.b7web.com.br:501\";\n\nconst apiFetchPost = async (endpoint, body) => {\n  if (!body.token) {\n    let token = Cookies.get(\"token\");\n\n    if (token) {\n      body.token = token;\n    }\n  }\n\n  const res = await fetch(BASEAPI + endpoint, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(body)\n  });\n  const json = await res.json();\n\n  if (json.notallowed) {\n    window.location.href = \"/signin\";\n    return;\n  }\n\n  return json;\n};\n\nconst apiFetchGet = async (endpoint, body = []) => {\n  if (!body.token) {\n    let token = Cookies.get(\"token\");\n\n    if (token) {\n      body.token = token;\n    }\n  }\n\n  const res = await fetch(`${BASEAPI + endpoint}?${qs.stringify(body)}`);\n  const json = await res.json();\n\n  if (json.notallowed) {\n    window.location.href = \"/signin\";\n    return;\n  }\n\n  return json;\n};\n\nconst OlxAPI = {\n  login: async (email, password) => {\n    const json = await apiFetchPost(\"/user/signin\", {\n      email,\n      password\n    });\n    return json;\n  },\n  register: async (name, email, password, stateLoc) => {\n    const json = await apiFetchPost(\"/user/signup\", {\n      name,\n      email,\n      password,\n      state: stateLoc\n    });\n    return json;\n  },\n  getStates: async () => {\n    const json = await apiFetchGet(\"/states\");\n    return json.states;\n  },\n  getCategories: async () => {\n    const json = await apiFetchGet(\"/categories\");\n    return json.categories;\n  },\n  getAds: async () => {}\n};\nexport default (() => OlxAPI);","map":{"version":3,"sources":["G:/workspaces/reactWorkspace/olx/frontend/src/helpers/OlxApi.js"],"names":["Cookies","qs","BASEAPI","apiFetchPost","endpoint","body","token","get","res","fetch","method","headers","Accept","JSON","stringify","json","notallowed","window","location","href","apiFetchGet","OlxAPI","login","email","password","register","name","stateLoc","state","getStates","states","getCategories","categories","getAds"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,MAAMC,OAAO,GAAG,gCAAhB;;AAEA,MAAMC,YAAY,GAAG,OAAOC,QAAP,EAAiBC,IAAjB,KAA0B;AAC7C,MAAI,CAACA,IAAI,CAACC,KAAV,EAAiB;AACf,QAAIA,KAAK,GAAGN,OAAO,CAACO,GAAR,CAAY,OAAZ,CAAZ;;AACA,QAAID,KAAJ,EAAW;AACTD,MAAAA,IAAI,CAACC,KAAL,GAAaA,KAAb;AACD;AACF;;AAED,QAAME,GAAG,GAAG,MAAMC,KAAK,CAACP,OAAO,GAAGE,QAAX,EAAqB;AAC1CM,IAAAA,MAAM,EAAE,MADkC;AAE1CC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kBADD;AAEP,sBAAgB;AAFT,KAFiC;AAM1CP,IAAAA,IAAI,EAAEQ,IAAI,CAACC,SAAL,CAAeT,IAAf;AANoC,GAArB,CAAvB;AASA,QAAMU,IAAI,GAAG,MAAMP,GAAG,CAACO,IAAJ,EAAnB;;AAEA,MAAIA,IAAI,CAACC,UAAT,EAAqB;AACnBC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,SAAvB;AACA;AACD;;AACD,SAAOJ,IAAP;AACD,CAxBD;;AA0BA,MAAMK,WAAW,GAAG,OAAOhB,QAAP,EAAiBC,IAAI,GAAG,EAAxB,KAA+B;AACjD,MAAI,CAACA,IAAI,CAACC,KAAV,EAAiB;AACf,QAAIA,KAAK,GAAGN,OAAO,CAACO,GAAR,CAAY,OAAZ,CAAZ;;AACA,QAAID,KAAJ,EAAW;AACTD,MAAAA,IAAI,CAACC,KAAL,GAAaA,KAAb;AACD;AACF;;AAED,QAAME,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEP,OAAO,GAAGE,QAAS,IAAGH,EAAE,CAACa,SAAH,CAAaT,IAAb,CAAmB,EAA7C,CAAvB;AAEA,QAAMU,IAAI,GAAG,MAAMP,GAAG,CAACO,IAAJ,EAAnB;;AAEA,MAAIA,IAAI,CAACC,UAAT,EAAqB;AACnBC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,SAAvB;AACA;AACD;;AACD,SAAOJ,IAAP;AACD,CAjBD;;AAmBA,MAAMM,MAAM,GAAG;AACbC,EAAAA,KAAK,EAAE,OAAOC,KAAP,EAAcC,QAAd,KAA2B;AAChC,UAAMT,IAAI,GAAG,MAAMZ,YAAY,CAAC,cAAD,EAAiB;AAAEoB,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAjB,CAA/B;AACA,WAAOT,IAAP;AACD,GAJY;AAMbU,EAAAA,QAAQ,EAAE,OAAOC,IAAP,EAAaH,KAAb,EAAoBC,QAApB,EAA8BG,QAA9B,KAA2C;AACnD,UAAMZ,IAAI,GAAG,MAAMZ,YAAY,CAAC,cAAD,EAAiB;AAC9CuB,MAAAA,IAD8C;AAE9CH,MAAAA,KAF8C;AAG9CC,MAAAA,QAH8C;AAI9CI,MAAAA,KAAK,EAAED;AAJuC,KAAjB,CAA/B;AAMA,WAAOZ,IAAP;AACD,GAdY;AAgBbc,EAAAA,SAAS,EAAE,YAAY;AACrB,UAAMd,IAAI,GAAG,MAAMK,WAAW,CAAC,SAAD,CAA9B;AACA,WAAOL,IAAI,CAACe,MAAZ;AACD,GAnBY;AAqBbC,EAAAA,aAAa,EAAE,YAAY;AACzB,UAAMhB,IAAI,GAAG,MAAMK,WAAW,CAAC,aAAD,CAA9B;AACA,WAAOL,IAAI,CAACiB,UAAZ;AACD,GAxBY;AA0BbC,EAAAA,MAAM,EAAE,YAAY,CAAE;AA1BT,CAAf;AA6BA,gBAAe,MAAMZ,MAArB","sourcesContent":["import Cookies from \"js-cookie\";\r\nimport qs from \"qs\";\r\nconst BASEAPI = \"http://alunos.b7web.com.br:501\";\r\n\r\nconst apiFetchPost = async (endpoint, body) => {\r\n  if (!body.token) {\r\n    let token = Cookies.get(\"token\");\r\n    if (token) {\r\n      body.token = token;\r\n    }\r\n  }\r\n\r\n  const res = await fetch(BASEAPI + endpoint, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(body),\r\n  });\r\n\r\n  const json = await res.json();\r\n\r\n  if (json.notallowed) {\r\n    window.location.href = \"/signin\";\r\n    return;\r\n  }\r\n  return json;\r\n};\r\n\r\nconst apiFetchGet = async (endpoint, body = []) => {\r\n  if (!body.token) {\r\n    let token = Cookies.get(\"token\");\r\n    if (token) {\r\n      body.token = token;\r\n    }\r\n  }\r\n\r\n  const res = await fetch(`${BASEAPI + endpoint}?${qs.stringify(body)}`);\r\n\r\n  const json = await res.json();\r\n\r\n  if (json.notallowed) {\r\n    window.location.href = \"/signin\";\r\n    return;\r\n  }\r\n  return json;\r\n};\r\n\r\nconst OlxAPI = {\r\n  login: async (email, password) => {\r\n    const json = await apiFetchPost(\"/user/signin\", { email, password });\r\n    return json;\r\n  },\r\n\r\n  register: async (name, email, password, stateLoc) => {\r\n    const json = await apiFetchPost(\"/user/signup\", {\r\n      name,\r\n      email,\r\n      password,\r\n      state: stateLoc,\r\n    });\r\n    return json;\r\n  },\r\n\r\n  getStates: async () => {\r\n    const json = await apiFetchGet(\"/states\");\r\n    return json.states;\r\n  },\r\n\r\n  getCategories: async () => {\r\n    const json = await apiFetchGet(\"/categories\");\r\n    return json.categories;\r\n  },\r\n\r\n  getAds: async () => {},\r\n};\r\n\r\nexport default () => OlxAPI;\r\n"]},"metadata":{},"sourceType":"module"}